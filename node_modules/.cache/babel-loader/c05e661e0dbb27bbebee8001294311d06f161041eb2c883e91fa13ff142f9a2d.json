{"ast":null,"code":"var _jsxFileName = \"/Users/akriti/workspace/portfolio/portfolio/src/bestofreddit/features/postTiles.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postsSelector, addPost, removeAllPosts } from \"../App/postsSlice\";\nimport CommentSection from \"../components/commentSection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function getPosts(catName) {\n  const responseJSON = await fetch(`https://www.reddit.com/${catName}.json`);\n  //const responseJSON = await fetch(`https://www.reddit.com/r/exeter.json`);\n  const data = await responseJSON.json();\n  return data;\n}\nexport default function PostTiles(props) {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const posts = useSelector(postsSelector);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const posts1 = async () => {\n      setIsLoading(true);\n      const postsData = await getPosts(props.selectedCat);\n      setIsLoading(false);\n      dispatch(removeAllPosts());\n      postsData.data.children.forEach(post => {\n        const {\n          id,\n          title,\n          score,\n          thumbnail,\n          url,\n          num_comments\n        } = post.data;\n        const imgsrc = thumbnail;\n        let type = 'image';\n        post.data.preview ? type = 'image' : type = 'url';\n        //preview && preview.images && preview.images[0].source.url;\n        dispatch(addPost({\n          id: id,\n          title: title,\n          votes: score,\n          imgsrc: imgsrc,\n          url: url,\n          type: type,\n          num_comments: num_comments\n        }));\n      });\n    };\n    posts1();\n  }, [props.selectedCat, dispatch]);\n  const handleImgErr = e => {\n    console.log(e.target);\n    let badImg = document.getElementById(e.target.id);\n    badImg.src = './default-placeholder.png';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 20\n    }, this) : Object.values(posts).map(post => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-tile\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img-div\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.imgsrc,\n            id: post.id,\n            className: \"post-image\",\n            alt: \"thumbnail\",\n            onError: handleImgErr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-div\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post-title\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: post.url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"url-div\",\n          children: post.type === 'url' && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post-url\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: post.url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: post.url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"votes-div\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post-votes\",\n            children: [\"Votes: \", post.votes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CommentSection, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(PostTiles, \"YJs8Uxp9HmASoG3XYLbROcnOsms=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = PostTiles;\nvar _c;\n$RefreshReg$(_c, \"PostTiles\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","postsSelector","addPost","removeAllPosts","CommentSection","jsxDEV","_jsxDEV","getPosts","catName","responseJSON","fetch","data","json","PostTiles","props","_s","isLoading","setIsLoading","posts","dispatch","posts1","postsData","selectedCat","children","forEach","post","id","title","score","thumbnail","url","num_comments","imgsrc","type","preview","votes","handleImgErr","e","console","log","target","badImg","document","getElementById","src","className","fileName","_jsxFileName","lineNumber","columnNumber","Object","values","map","alt","onError","href","rel","_c","$RefreshReg$"],"sources":["/Users/akriti/workspace/portfolio/portfolio/src/bestofreddit/features/postTiles.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postsSelector, addPost, removeAllPosts } from \"../App/postsSlice\";\nimport CommentSection from \"../components/commentSection\";\n\n\nasync function getPosts(catName) {\n  const responseJSON = await fetch(`https://www.reddit.com/${catName}.json`);\n  //const responseJSON = await fetch(`https://www.reddit.com/r/exeter.json`);\n  const data = await responseJSON.json();\n  return data;\n}\n\n\nexport default function PostTiles(props) {\n  const [isLoading, setIsLoading] = useState(false);\n  const posts = useSelector(postsSelector);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const posts1 = async () => {\n      setIsLoading(true);\n      const postsData = await getPosts(props.selectedCat);\n      setIsLoading(false);\n      dispatch(removeAllPosts());\n      postsData.data.children.forEach(post => {\n        const { id, title, score, thumbnail, url, num_comments } = post.data;\n        const imgsrc = thumbnail;\n        let type = 'image';\n        post.data.preview ? type = 'image' : type = 'url';\n        //preview && preview.images && preview.images[0].source.url;\n        dispatch(addPost({\n          id: id,\n          title: title,\n          votes: score,\n          imgsrc: imgsrc,\n          url: url,\n          type: type,\n          num_comments: num_comments\n        }))\n      })\n    }\n    posts1();\n  }, [props.selectedCat, dispatch]);\n\n\n  const handleImgErr = (e) => {\n    console.log(e.target);\n    let badImg = document.getElementById(e.target.id);\n    badImg.src = './default-placeholder.png';\n\n  }\n\n  return (\n    <div className=\"posts\">\n      {isLoading ? <p className=\"loading-text\"><em>Loading...</em></p> : Object.values(posts).map(post => {\n        return (\n          <div key={post.id} className=\"post-tile\">\n            <div className=\"img-div\">\n              <img src={post.imgsrc} id={post.id} className=\"post-image\" alt='thumbnail' onError={handleImgErr} />\n            </div>\n            <div className=\"title-div\">\n              <p className=\"post-title\"><a href={post.url} target=\"_blank\" rel=\"noopener noreferrer\">{post.title}</a></p>\n            </div>\n            <div className=\"url-div\">\n              {post.type === 'url' && <p className=\"post-url\"><a href={post.url} target=\"_blank\" rel=\"noopener noreferrer\">{post.url}</a></p>}\n            </div>\n            <div className=\"votes-div\">\n              <p className=\"post-votes\">Votes: {post.votes}</p>\n            </div>\n            <CommentSection post={post} />\n          </div>\n        )\n      })\n      }\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}