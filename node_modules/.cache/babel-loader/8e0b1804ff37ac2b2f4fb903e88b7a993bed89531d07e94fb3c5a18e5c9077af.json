{"ast":null,"code":"var _jsxFileName = \"/Users/akriti/workspace/portfolio/portfolio/src/pages/PlaylistCreator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Spc.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getAccessToken = async () => {\n  const TOKEN_ENDPOINT = 'https://accounts.spotify.com/api/token';\n  // header paremeter\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    }\n  };\n  // request body parameter\n  const data = {\n    grant_type: 'client_credentials',\n    client_id: '68454f854adb49db969d4c7cc8dde421',\n    client_secret: 'bd661f27335540d2a793b65f28aad834'\n  };\n  const response = await axios.post(TOKEN_ENDPOINT, data, config);\n  return response.data.access_token;\n};\nconst accessToken = await getAccessToken();\nfunction PlaylistCreator() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedSongs, setSelectedSongs] = useState([]);\n  const [playlistName, setPlaylistName] = useState(\"\");\n\n  // Function to search for songs\n  const searchSongs = async () => {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    };\n    try {\n      const response = await axios.get(`https://api.spotify.com/v1/search?q=${searchTerm}&type=track`, config);\n      setSearchResults(response.data.tracks.items);\n    } catch (error) {\n      console.error('Error fetching songs:', error);\n    }\n  };\n\n  // Function to add a song to the selected list\n  const addSongToList = song => {\n    setSelectedSongs([...selectedSongs, song]);\n  };\n  const removeSongFromList = songid => {\n    setSelectedSongs(prev => prev.filter(t => t.id !== songid));\n  };\n  const savetoplaylist = e => {\n    document.getElementById('saveBtn').innerText = 'Saved';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"about-me-bg-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"about-me-bg-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"page-name\",\n        children: \"Spotify Playlist Selector\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spc-page\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top-matches-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: searchTerm,\n              onChange: e => setSearchTerm(e.target.value),\n              placeholder: \"Enter search term\",\n              className: \"text-entry\",\n              id: \"song-searchbar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: searchSongs,\n              className: \"spc-button\",\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"spc-header\",\n              children: \"Top Matches\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: searchResults.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [song.name, \" by \", song.artists[0].name, '  ', /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => addSongToList(song),\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, this)]\n              }, song.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Selected Songs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"playlist_name\",\n            children: \"Enter a name for your playlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: playlistName,\n            onChange: e => setPlaylistName(e.target.value),\n            name: \"playlist_name\",\n            placeholder: \"Playlist name\",\n            className: \"text-entry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: selectedSongs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [song.name, \" by \", song.artists[0].name, '  ', /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeSongFromList(song.id),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)]\n            }, song.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"saveBtn\",\n            onClick: savetoplaylist,\n            children: \"Add to my Spotify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2024 Rishabh Goel. All rights reserved. V1.1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(PlaylistCreator, \"hb5PEN7JkER10AAXeCItI46SwkI=\");\n_c = PlaylistCreator;\nexport default PlaylistCreator;\nvar _c;\n$RefreshReg$(_c, \"PlaylistCreator\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","getAccessToken","TOKEN_ENDPOINT","config","headers","data","grant_type","client_id","client_secret","response","post","access_token","accessToken","PlaylistCreator","_s","searchTerm","setSearchTerm","searchResults","setSearchResults","selectedSongs","setSelectedSongs","playlistName","setPlaylistName","searchSongs","Authorization","get","tracks","items","error","console","addSongToList","song","removeSongFromList","songid","prev","filter","t","id","savetoplaylist","e","document","getElementById","innerText","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","onClick","map","name","artists","htmlFor","_c","$RefreshReg$"],"sources":["/Users/akriti/workspace/portfolio/portfolio/src/pages/PlaylistCreator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './Spc.css';\n\n\nconst getAccessToken = async () => {\n  const TOKEN_ENDPOINT = 'https://accounts.spotify.com/api/token';\n  // header paremeter\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n    }\n  }\n  // request body parameter\n  const data = {\n    grant_type: 'client_credentials',\n    client_id: '68454f854adb49db969d4c7cc8dde421',\n    client_secret: 'bd661f27335540d2a793b65f28aad834',\n  }\n\n  const response = await axios.post(TOKEN_ENDPOINT, data, config)\n  return response.data.access_token;\n};\n\nconst accessToken = await getAccessToken();\n\nfunction PlaylistCreator() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedSongs, setSelectedSongs] = useState([]);\n  const [playlistName, setPlaylistName] = useState(\"\");\n\n\n  // Function to search for songs\n  const searchSongs = async () => {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      }\n    }\n    try {\n      const response = await axios.get(`https://api.spotify.com/v1/search?q=${searchTerm}&type=track`, config);\n      setSearchResults(response.data.tracks.items);\n    } catch (error) {\n      console.error('Error fetching songs:', error);\n    }\n  };\n\n  // Function to add a song to the selected list\n  const addSongToList = (song) => {\n    setSelectedSongs([...selectedSongs, song]);\n  };\n\n  const removeSongFromList = (songid) => {\n    setSelectedSongs(prev => prev.filter(t => t.id !== songid));\n  };\n\n  const savetoplaylist = (e) => {\n\n    document.getElementById('saveBtn').innerText = 'Saved';\n  }\n\n  return (\n    <div>\n      <div className=\"about-me-bg-1\"></div>\n      <div className=\"about-me-bg-2\"></div>\n      <div className='page-container'>\n        <p className='page-name'>Spotify Playlist Selector</p>\n        <div className='spc-page'>\n          <div className='top-matches-div'>\n            <div>\n              <input type=\"text\" value={searchTerm} onChange={(e) => setSearchTerm(e.target.value)} placeholder='Enter search term' className='text-entry' id='song-searchbar' />\n              <button onClick={searchSongs} className='spc-button'>Search</button>\n            </div>\n            <div>\n              <p className='spc-header'>Top Matches</p>\n              <ul>\n                {searchResults.map((song) => (\n                  <li key={song.id}>\n                    {song.name} by {song.artists[0].name}{'  '}\n                    <button onClick={() => addSongToList(song)}>Add</button>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n          <div>\n            <h2>Selected Songs</h2>\n            <label htmlFor='playlist_name'>Enter a name for your playlist</label>\n            <br />\n            <input type='text' value={playlistName} onChange={(e) => setPlaylistName(e.target.value)} name='playlist_name' placeholder='Playlist name' className='text-entry' />\n            <ul>\n              {selectedSongs.map((song) => (\n                <li key={song.id}>\n                  {song.name} by {song.artists[0].name}{'  '}\n                  <button onClick={() => removeSongFromList(song.id)}>Remove</button>\n                </li>\n              ))}\n            </ul>\n            <button id='saveBtn' onClick={savetoplaylist}>Add to my Spotify</button>\n          </div>\n        </div>\n      </div>\n      <footer>\n        <p>&copy; 2024 Rishabh Goel. All rights reserved. V1.1</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default PlaylistCreator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}