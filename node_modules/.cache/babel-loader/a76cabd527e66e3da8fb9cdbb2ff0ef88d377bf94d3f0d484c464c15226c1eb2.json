{"ast":null,"code":"var _jsxFileName = \"/Users/akriti/workspace/portfolio/portfolio/src/bestofreddit/components/commentSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addComment, commentsSelector, removeAllComments } from \"../App/commentsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function getComments(postId) {\n  const response = await fetch(`https://www.reddit.com/comments/${postId}.json`);\n  const data = response.json();\n  return data;\n}\nexport default function CommentSection({\n  post\n}) {\n  _s();\n  const [showComments, setShowComments] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n  const comments = useSelector(commentsSelector);\n  const handleClick = () => {\n    async function fetchComments() {\n      setShowComments(true);\n      setIsLoading(true);\n      const comments = await getComments(post.id);\n      setIsLoading(false);\n      const commentData = comments[1].data.children; // this is an array of first level comments\n      dispatch(removeAllComments());\n      commentData.forEach(comment => {\n        const {\n          id,\n          body,\n          score,\n          link_id\n        } = comment.data;\n        dispatch(addComment({\n          id: id,\n          text: body,\n          votes: score,\n          postId: link_id\n        }));\n      });\n    }\n    fetchComments();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-button-div\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"comment-button\",\n        onClick: handleClick,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-regular fa-comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 66\n        }, this), \" (\", post.num_comments, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 20\n    }, this) : null, showComments && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-overlay\",\n      onClick: e => {\n        if (e.target.classList.contains('popup-overlay')) {\n          setShowComments(false);\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comments-header\",\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loading-text\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 26\n        }, this) : Object.values(comments).map(comment => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comment-text\",\n          children: comment.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 119\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"close-btn\",\n          onClick: () => {\n            setShowComments(false);\n          },\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentSection, \"2YcMmmo2ypYSbYzoxwBAC5V17Tc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","addComment","commentsSelector","removeAllComments","jsxDEV","_jsxDEV","getComments","postId","response","fetch","data","json","CommentSection","post","_s","showComments","setShowComments","isLoading","setIsLoading","dispatch","comments","handleClick","fetchComments","id","commentData","children","forEach","comment","body","score","link_id","text","votes","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","num_comments","e","target","classList","contains","Object","values","map","class","_c","$RefreshReg$"],"sources":["/Users/akriti/workspace/portfolio/portfolio/src/bestofreddit/components/commentSection.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addComment, commentsSelector, removeAllComments } from \"../App/commentsSlice\";\n\nasync function getComments(postId) {\n  const response = await fetch(`https://www.reddit.com/comments/${postId}.json`);\n  const data = response.json();\n  return data;\n}\n\nexport default function CommentSection({ post }) {\n  const [showComments, setShowComments] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const dispatch = useDispatch();\n  const comments = useSelector(commentsSelector);\n\n  const handleClick = () => {\n\n    async function fetchComments() {\n      setShowComments(true);\n      setIsLoading(true);\n      const comments = await getComments(post.id);\n      setIsLoading(false);\n      const commentData = comments[1].data.children; // this is an array of first level comments\n      dispatch(removeAllComments());\n      commentData.forEach(comment => {\n        const { id, body, score, link_id } = comment.data;\n        dispatch(addComment({\n          id: id,\n          text: body,\n          votes: score,\n          postId: link_id\n        }));\n      });\n    }\n\n    fetchComments();\n  }\n\n  return (\n    <div className=\"comment-section\">\n      <div className=\"comment-button-div\">\n        <button className=\"comment-button\" onClick={handleClick}><i className=\"fa-regular fa-comment\"></i> ({post.num_comments})</button>\n      </div>\n      {isLoading ? <p className=\"loading-text\"><em>Loading...</em></p> : null}\n      {(showComments) && (\n        <div className=\"popup-overlay\" onClick={(e) => { if (e.target.classList.contains('popup-overlay')) { setShowComments(false) } }}>\n          <div className=\"comments-div\">\n            <p className=\"comments-header\">Comments</p>\n            {isLoading ? <p className=\"loading-text\"><em>Loading...</em></p> : Object.values(comments).map(comment => <p className=\"comment-text\">{comment.text}</p>)}\n            <button class=\"close-btn\" onClick={() => { setShowComments(false) }}>X</button>\n          </div>\n        </div>\n      )\n      }\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}