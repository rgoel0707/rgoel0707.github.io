{"ast":null,"code":"export default function polygonArea(coordsarray) {\n  let area = 0;\n  /*  let j = coords.length - 1;\n  \n    for (let i = 0; i < coords.length; i++) {\n        area += (coords[j].x + coords[i].x) * (coords[j].y - coords[i].y);\n        j = i;\n    }\n  \n    return Math.abs(area / 2);\n  \n  \n  let highestY=0;\n  let secondHighestY=0;\n  for (let i=1;i<yArr.length;i++){\n    if(yArr[i]>yArr[highestY]){\n      highestY=i;\n    }\n  }\n  for (let i=0;i<yArr.length;i++){\n    if(yArr[i]>yArr[secondHighestY]&&yArr[i]<yArr[highestY]){\n      secondHighestY=i;\n    }\n  }\n  */\n  coordsarray.sort((a, b) => b.y > a.y);\n  console.log(coordsarray);\n  return area;\n}","map":{"version":3,"names":["polygonArea","coordsarray","area","sort","a","b","y","console","log"],"sources":["/Users/akriti/workspace/portfolio/portfolio/src/SolarChecker/Utilities/polygonArea.js"],"sourcesContent":["\nexport default function polygonArea(coordsarray) {\n  let area = 0;\n/*  let j = coords.length - 1;\n\n  for (let i = 0; i < coords.length; i++) {\n      area += (coords[j].x + coords[i].x) * (coords[j].y - coords[i].y);\n      j = i;\n  }\n\n  return Math.abs(area / 2);\n\n\nlet highestY=0;\nlet secondHighestY=0;\nfor (let i=1;i<yArr.length;i++){\n  if(yArr[i]>yArr[highestY]){\n    highestY=i;\n  }\n}\nfor (let i=0;i<yArr.length;i++){\n  if(yArr[i]>yArr[secondHighestY]&&yArr[i]<yArr[highestY]){\n    secondHighestY=i;\n  }\n}\n*/\ncoordsarray.sort((a,b)=>b.y>a.y);\nconsole.log(coordsarray);\n\n\n  return area;\n}\n"],"mappings":"AACA,eAAe,SAASA,WAAWA,CAACC,WAAW,EAAE;EAC/C,IAAIC,IAAI,GAAG,CAAC;EACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAD,WAAW,CAACE,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAGA,CAAC,CAACC,CAAC,GAACF,CAAC,CAACE,CAAC,CAAC;EAChCC,OAAO,CAACC,GAAG,CAACP,WAAW,CAAC;EAGtB,OAAOC,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}