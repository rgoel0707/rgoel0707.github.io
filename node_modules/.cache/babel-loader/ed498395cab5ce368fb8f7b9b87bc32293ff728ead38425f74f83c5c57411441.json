{"ast":null,"code":"export default function polygonArea([xArr, yArr]) {\n  let area = 0;\n  /*  let j = coords.length - 1;\n  \n    for (let i = 0; i < coords.length; i++) {\n        area += (coords[j].x + coords[i].x) * (coords[j].y - coords[i].y);\n        j = i;\n    }\n  \n    return Math.abs(area / 2);\n    */\n\n  let highestY = 0;\n  let secondHighestY = 0;\n  for (let i = 1; i < yArr.length; i++) {\n    if (yArr[i] > yArr[highestY]) {\n      highestY = i;\n    }\n  }\n  for (let i = 0; i < yArr.length; i++) {\n    if (yArr[i] > yArr[secondHighestY] && yArr[i] < yArr[highestY]) {\n      secondHighestY = i;\n    }\n  }\n  return area;\n}","map":{"version":3,"names":["polygonArea","xArr","yArr","area","highestY","secondHighestY","i","length"],"sources":["/Users/akriti/workspace/portfolio/portfolio/src/SolarChecker/Utilities/polygonArea.js"],"sourcesContent":["\nexport default function polygonArea([xArr,yArr]) {\n  let area = 0;\n/*  let j = coords.length - 1;\n\n  for (let i = 0; i < coords.length; i++) {\n      area += (coords[j].x + coords[i].x) * (coords[j].y - coords[i].y);\n      j = i;\n  }\n\n  return Math.abs(area / 2);\n  */\n\nlet highestY=0;\nlet secondHighestY=0;\nfor (let i=1;i<yArr.length;i++){\n  if(yArr[i]>yArr[highestY]){\n    highestY=i;\n  }\n}\nfor (let i=0;i<yArr.length;i++){\n  if(yArr[i]>yArr[secondHighestY]&&yArr[i]<yArr[highestY]){\n    secondHighestY=i;\n  }\n}\n\n  return area;\n}\n"],"mappings":"AACA,eAAe,SAASA,WAAWA,CAAC,CAACC,IAAI,EAACC,IAAI,CAAC,EAAE;EAC/C,IAAIC,IAAI,GAAG,CAAC;EACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA,IAAIC,QAAQ,GAAC,CAAC;EACd,IAAIC,cAAc,GAAC,CAAC;EACpB,KAAK,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAACJ,IAAI,CAACK,MAAM,EAACD,CAAC,EAAE,EAAC;IAC7B,IAAGJ,IAAI,CAACI,CAAC,CAAC,GAACJ,IAAI,CAACE,QAAQ,CAAC,EAAC;MACxBA,QAAQ,GAACE,CAAC;IACZ;EACF;EACA,KAAK,IAAIA,CAAC,GAAC,CAAC,EAACA,CAAC,GAACJ,IAAI,CAACK,MAAM,EAACD,CAAC,EAAE,EAAC;IAC7B,IAAGJ,IAAI,CAACI,CAAC,CAAC,GAACJ,IAAI,CAACG,cAAc,CAAC,IAAEH,IAAI,CAACI,CAAC,CAAC,GAACJ,IAAI,CAACE,QAAQ,CAAC,EAAC;MACtDC,cAAc,GAACC,CAAC;IAClB;EACF;EAEE,OAAOH,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}