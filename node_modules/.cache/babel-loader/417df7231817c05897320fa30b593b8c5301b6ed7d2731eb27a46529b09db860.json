{"ast":null,"code":"var _jsxFileName = \"/Users/akriti/workspace/portfolio/portfolio/src/pages/PlaylistCreator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getAccessToken = async () => {\n  const TOKEN_ENDPOINT = 'https://accounts.spotify.com/api/token';\n  // header paremeter\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    }\n  };\n  // request body parameter\n  const data = {\n    grant_type: 'client_credentials',\n    client_id: '68454f854adb49db969d4c7cc8dde421',\n    client_secret: 'bd661f27335540d2a793b65f28aad834'\n  };\n  const response = await axios.post(TOKEN_ENDPOINT, data, config);\n  return response.data.access_token;\n};\nconst accessToken = await getAccessToken();\nfunction PlaylistCreator() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedSongs, setSelectedSongs] = useState([]);\n  const [playlistName, setPlaylistName] = useState(\"\");\n\n  // Function to search for songs\n  const searchSongs = async () => {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    };\n    try {\n      const response = await axios.get(`https://api.spotify.com/v1/search?q=${searchTerm}&type=track`, config);\n      setSearchResults(response.data.tracks.items);\n    } catch (error) {\n      console.error('Error fetching songs:', error);\n    }\n  };\n\n  // Function to add a song to the selected list\n  const addSongToList = song => {\n    setSelectedSongs([...selectedSongs, song]);\n  };\n  const removeSongFromList = songid => {\n    setSelectedSongs(prev => prev.filter(t => t.id !== songid));\n  };\n  const savetoplaylist = e => {\n    document.getElementById('saveBtn').innerText = 'Saved';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"about-me-bg-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"about-me-bg-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"page-name\",\n        children: \"Spotify Song Selector\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          placeholder: \"Enter search term\",\n          className: \"text-entry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: searchSongs,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: searchResults.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [song.name, \" by \", song.artists[0].name, '  ', /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addSongToList(song),\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, song.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Selected Songs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"playlist_name\",\n          children: \"Enter a name for your playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: playlistName,\n          onChange: e => setPlaylistName(e.target.value),\n          name: \"playlist_name\",\n          placeholder: \"Playlist name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: selectedSongs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [song.name, \" by \", song.artists[0].name, '  ', /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeSongFromList(song.id),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, song.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"saveBtn\",\n          onClick: savetoplaylist,\n          children: \"Add to my Spotify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(PlaylistCreator, \"hb5PEN7JkER10AAXeCItI46SwkI=\");\n_c = PlaylistCreator;\nexport default PlaylistCreator;\nvar _c;\n$RefreshReg$(_c, \"PlaylistCreator\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","getAccessToken","TOKEN_ENDPOINT","config","headers","data","grant_type","client_id","client_secret","response","post","access_token","accessToken","PlaylistCreator","_s","searchTerm","setSearchTerm","searchResults","setSearchResults","selectedSongs","setSelectedSongs","playlistName","setPlaylistName","searchSongs","Authorization","get","tracks","items","error","console","addSongToList","song","removeSongFromList","songid","prev","filter","t","id","savetoplaylist","e","document","getElementById","innerText","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","onClick","map","name","artists","htmlFor","_c","$RefreshReg$"],"sources":["/Users/akriti/workspace/portfolio/portfolio/src/pages/PlaylistCreator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\n\nconst getAccessToken = async () => {\n  const TOKEN_ENDPOINT = 'https://accounts.spotify.com/api/token';\n  // header paremeter\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n    }\n  }\n  // request body parameter\n  const data = {\n    grant_type: 'client_credentials',\n    client_id: '68454f854adb49db969d4c7cc8dde421',\n    client_secret: 'bd661f27335540d2a793b65f28aad834',\n  }\n\n  const response = await axios.post(TOKEN_ENDPOINT, data, config)\n  return response.data.access_token;\n};\n\nconst accessToken = await getAccessToken();\n\nfunction PlaylistCreator() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedSongs, setSelectedSongs] = useState([]);\n  const [playlistName, setPlaylistName] = useState(\"\");\n\n\n  // Function to search for songs\n  const searchSongs = async () => {\n    const config={\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      }\n    }\n    try {\n      const response = await axios.get(`https://api.spotify.com/v1/search?q=${searchTerm}&type=track`, config);\n      setSearchResults(response.data.tracks.items);\n    } catch (error) {\n      console.error('Error fetching songs:', error);\n    }\n  };\n\n  // Function to add a song to the selected list\n  const addSongToList = (song) => {\n    setSelectedSongs([...selectedSongs, song]);\n  };\n\n  const removeSongFromList = (songid) => {\n    setSelectedSongs(prev=>prev.filter(t=>t.id!==songid));\n  };\n\n  const savetoplaylist = (e) => {\n\n    document.getElementById('saveBtn').innerText='Saved';\n  }\n\n  return (\n    <div>\n    <div className=\"about-me-bg-1\"></div>\n      <div className=\"about-me-bg-2\"></div>\n      <div className='page-container'>\n      <p className='page-name'>Spotify Song Selector</p>\n      <div>\n        <input type=\"text\" value={searchTerm} onChange={(e) => setSearchTerm(e.target.value)} placeholder='Enter search term' className='text-entry'/>\n        <br/>\n        <br/>\n        <button onClick={searchSongs}>Search</button>\n      </div>\n      <div>\n        <h2>Search Results</h2>\n        <ul>\n          {searchResults.map((song) => (\n            <li key={song.id}>\n              {song.name} by {song.artists[0].name}{'  '}\n              <button onClick={() => addSongToList(song)}>Add</button>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        <h2>Selected Songs</h2>\n        <label htmlFor='playlist_name'>Enter a name for your playlist</label>\n        <br/>\n        <input type='text' value={playlistName} onChange={(e)=> setPlaylistName(e.target.value)} name='playlist_name' placeholder='Playlist name'/>\n        <ul>\n          {selectedSongs.map((song) => (\n            <li key={song.id}>\n              {song.name} by {song.artists[0].name}{'  '}\n              <button onClick={() => removeSongFromList(song.id)}>Remove</button>\n            </li>\n          ))}\n        </ul>\n        <button id='saveBtn' onClick={savetoplaylist}>Add to my Spotify</button>\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PlaylistCreator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}